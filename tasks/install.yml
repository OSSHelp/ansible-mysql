---
- name: install software-properties-common package
  apt:
    name: software-properties-common
    update_cache: yes
    cache_valid_time: 86400
  retries: 3
  delay: 10
  when: mysql_versions[version].apt_repo is defined
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: add osshelp-testing repo
  block:
    - name: install apt-transport-https
      apt:
        name: apt-transport-https
        update_cache: yes
        cache_valid_time: 86400
      retries: 3
      delay: 10
    - name: add osshelp apt-key
      apt_key:
        url: https://pkgs.osshelp.io/public.key
        state: present
    - name: generate osshelp-900
      template:
        src: osshelp-900.j2
        dest: /etc/apt/preferences.d/osshelp-900
    - name: add osshelp repository
      apt_repository:
        repo: 'deb https://pkgs.osshelp.io/ubuntu/ {{ ansible_distribution_release }}-testing main restricted universe multiverse'
        state: present
        filename: osshelp-testing
        update_cache: true
  when: version == 'maria_10.5' and ansible_distribution_release != 'focal'

- name: add apt key
  apt_key:
    keyserver: "{{ mysql_versions[version].apt_keyserver|default('keyserver.ubuntu.com') }}"
    id: "{{ mysql_versions[version].apt_keyid }}"
  when: mysql_versions[version].apt_keyid is defined

- name: add repo
  apt_repository:
    repo: "{{ mysql_versions[version].apt_repo }}"
    filename: "{{ mysql_versions[version].apt_repo_name|default(version) }}"
  when: mysql_versions[version].apt_repo is defined

- name: set debconf
  debconf:
    name: mysql-apt-config
    question: mysql-apt-config/select-server
    value: "{{ mysql_versions[version].server }}"
    vtype: select
  register: debconf_set
  when: mysql_versions[version].server is defined

- name: install the required deb package
  apt:
    deb: "{{ item }}"
  retries: 3
  delay: 10
  register: deb_package_install
  loop: "{{ mysql_versions[version].apt_repo_deb }}"
  when: mysql_versions[version].apt_repo_deb is defined

- name: update apt cache
  apt:
    update_cache: yes
  when: deb_package_install is changed or debconf_set is changed

- name: run custom pre-installation command
  command: "{{ mysql_versions[version].pre_install_command }}"
  changed_when: false
  when: mysql_versions[version].pre_install_command is defined

- name: install mysql
  apt:
    name: "{{ mysql_versions[version].package }}"
    update_cache: yes
    cache_valid_time: 86400

- name: enable service
  service:
    name: "{{ service }}"
    enabled: yes

- name: install default packages
  apt:
    name: "{{ default_packages }}"
    update_cache: yes
    cache_valid_time: 86400
  register: mysql_default_apt_res
  retries: 5
  until: mysql_default_apt_res is success

- name: install mysqltuner
  get_url:
    url: "{{ mysqltunner_url }}"
    dest: /usr/local/sbin/mysqltuner.pl
    mode: 0755
  register: mysqltuner_installed
  until: mysqltuner_installed is not failed
  retries: 3

- name: deploy logrotate config
  template:
    src: logrotate.j2
    dest: "{{ mysql_logrotate_config }}"
    mode: 0644
